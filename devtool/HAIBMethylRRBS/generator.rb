#!/usr/local/bin/ruby-1.9

require 'erb'
require 'fileutils'

# tables "*Sig" and "*OverlapSignal" are pointer tables containing
# single records. These are ommited.

HEADER = "      ## track: HAIB Methyl RRBS"

TABLES = %w(
wgEncodeHaibMethylRrbsGm12878HudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsGm12878HudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsH1hescHudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsH1hescHudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsK562HudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsK562HudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsHelas3HudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsHelas3HudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsHepg2OpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsHepg2OpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsAg04449UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsAg04449UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsAg04450UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsAg04450UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsAg09309UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsAg09309UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsAg09319UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsAg09319UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsAg10803UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsAg10803UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsCmkUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsCmkUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsFibroblOpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsFibroblOpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsGm12878ximatHudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsGm12878ximatHudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsGm12891HudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsGm12891HudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsGm12892HudsonalphagrowprotSitesRep1
wgEncodeHaibMethylRrbsGm12892HudsonalphagrowprotSitesRep2
wgEncodeHaibMethylRrbsGm19239OpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsGm19239OpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsGm19240OpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsGm19240OpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsHaeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHaeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHcfUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHcfUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHcmUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHcmUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHcpeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHcpeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHct116YalegrowprotSitesRep1
wgEncodeHaibMethylRrbsHct116YalegrowprotSitesRep2
wgEncodeHaibMethylRrbsHeeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHeeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHek293YalegrowprotSitesRep1
wgEncodeHaibMethylRrbsHek293YalegrowprotSitesRep2
wgEncodeHaibMethylRrbsHipeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHipeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHmecUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHmecUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHnpceUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHnpceUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHpaeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHpaeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHrceUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHrceUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHreUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHreUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHrpeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsHrpeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsHsmmSitesRep1
wgEncodeHaibMethylRrbsHsmmSitesRep2
wgEncodeHaibMethylRrbsHsmmSitesRep3
wgEncodeHaibMethylRrbsHsmmtOpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsHsmmtOpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsImr90UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsImr90UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsJurkatUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsLncapAndroOpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsLncapAndroOpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsMcf10aesYalestruhlgrowprotSitesRep1
wgEncodeHaibMethylRrbsMcf10aesTamYalestruhlgrowprotSitesRep1
wgEncodeHaibMethylRrbsMcf10aesYalestruhlgrowprotSitesRep2
wgEncodeHaibMethylRrbsMcf10aesTamYalestruhlgrowprotSitesRep2
wgEncodeHaibMethylRrbsMcf7OpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsMcf7OpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsMelanoSitesRep1
wgEncodeHaibMethylRrbsMelanoSitesRep2
wgEncodeHaibMethylRrbsMelanoSitesRep3
wgEncodeHaibMethylRrbsNb4UwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsNb4UwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsNhaUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsNhaUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsNhbeUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsNhbeUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsNhdfneoUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsNhdfneoUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsNt2d1YalegrowprotSitesRep1
wgEncodeHaibMethylRrbsNt2d1YalegrowprotSitesRep2
wgEncodeHaibMethylRrbsOsteoblOpenchromgrowprotSitesRep1
wgEncodeHaibMethylRrbsOsteoblOpenchromgrowprotSitesRep2
wgEncodeHaibMethylRrbsPanisletsSitesRep1
wgEncodeHaibMethylRrbsPanisletsSitesRep2
wgEncodeHaibMethylRrbsPanisletsSitesRep3
wgEncodeHaibMethylRrbsPanisletsSitesRep4
wgEncodeHaibMethylRrbsPanisletsSitesRep5
wgEncodeHaibMethylRrbsProgfibSitesRep1
wgEncodeHaibMethylRrbsProgfibSitesRep2
wgEncodeHaibMethylRrbsRptecSitesRep1
wgEncodeHaibMethylRrbsRptecSitesRep2
wgEncodeHaibMethylRrbsSaecUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsSaecUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsSkmcUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsSkmcUwstamgrowprotSitesRep2
wgEncodeHaibMethylRrbsSknshraUwstamgrowprotSitesRep1
wgEncodeHaibMethylRrbsSknshraUwstamgrowprotSitesRep2
)

TEMP_SPEC = "template_spec.txt"
TEMP_AUTO = "template_auto.txt"
TEMP_MAIN = "template_main.txt"

FileUtils.mkdir_p("Specs") unless FileTest.exist?("Specs")
FileUtils.mkdir_p("Scripts") unless FileTest.exist?("Scripts")

TABLES.each do |tab|
  table_name  = tab
  klass_name  = tab[0].upcase << tab[1..-1]
  script_name = tab.downcase

  open("Specs/#{script_name}_spec.rb", "w") do |writer|
    erb = ERB.new File.read(TEMP_SPEC)
    writer.puts erb.result binding
  end

  open("Scripts/#{script_name}.rb", "w") do |writer|
    erb = ERB.new File.read(TEMP_MAIN)
    writer.puts erb.result binding
  end

end

open("autoload_snippet.rb", 'w') do |writer|
  writer.puts HEADER
  TABLES.each do |tab|
    table_name  = tab
    klass_name  = tab[0].upcase << tab[1..-1]
    script_name = tab.downcase
    erb = ERB.new File.read(TEMP_AUTO)
    writer.puts erb.result binding
  end
end
